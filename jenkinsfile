pipeline {
    agent {
        kubernetes {
            yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    jenkins/label: sonar-agent
spec:
  containers:
    - name: sonar-scanner
      image: sonarsource/sonar-scanner-cli:latest
      command:
        - cat
      tty: true
            """
            defaultContainer 'sonar-scanner'
            idleMinutes 10  // Avoid frequent pod deletion
        }
    }
    environment {
        SONARQUBE_URL = 'http://sonarqube-sonarqube.sonar:9000'  // Internal SonarQube URL
    }
    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/king04aman/todo-list.git'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                timeout(time: 5, unit: 'MINUTES') {  // Avoid infinite waiting
                    withSonarQubeEnv('SonarQube') {  
                        withCredentials([string(credentialsId: 'Sonarqube-scan', variable: 'SONAR_TOKEN')]) {
                            sh '''
                            sonar-scanner \
                              -Dsonar.projectKey=weather-app \
                              -Dsonar.sources=. \
                              -Dsonar.host.url=$SONARQUBE_URL \
                              -Dsonar.login=$SONAR_TOKEN
                            '''
                        }
                    }
                }
            }
        }
        stage('Quality Gate') {
            steps {
                script {
                    timeout(time: 5, unit: 'MINUTES') {
                        waitForQualityGate abortPipeline: true
                        // getting the quality gate status
                    }
                }
            }
        }
    }
}
